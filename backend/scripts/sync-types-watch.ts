import * as chokidar from 'chokidar';
import * as fs from 'fs';
import * as path from 'path';

const BACKEND_TYPES_PATH = path.join(__dirname, '../src/types/index.ts');
const FRONTEND_TYPES_PATH = path.join(
  __dirname,
  '../../frontend/app/types/api.ts'
);

function syncTypes() {
  try {
    const backendTypes = fs.readFileSync(BACKEND_TYPES_PATH, 'utf-8');

    const frontendTypes = `// AUTO-GENERATED FILE - DO NOT EDIT
// This file is automatically generated from backend types
// Last sync: ${new Date().toISOString()}

${backendTypes}
`;

    const frontendTypesDir = path.dirname(FRONTEND_TYPES_PATH);
    if (!fs.existsSync(frontendTypesDir)) {
      fs.mkdirSync(frontendTypesDir, { recursive: true });
    }

    fs.writeFileSync(FRONTEND_TYPES_PATH, frontendTypes, 'utf-8');

    console.log(
      `✅ [${new Date().toLocaleTimeString()}] Types synced successfully!`
    );
  } catch (error) {
    console.error('❌ Error syncing types:', error);
  }
}

// Initial sync
syncTypes();

// Watch for changes
console.log('👀 Watching for type changes...');
const watcher = chokidar.watch(BACKEND_TYPES_PATH, {
  persistent: true,
});

watcher.on('change', () => {
  console.log('🔄 Types file changed, syncing...');
  syncTypes();
});
