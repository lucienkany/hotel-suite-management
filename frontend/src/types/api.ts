// ============================================
// AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
// ============================================
// This file is automatically generated from backend types
// Source: backend/src/types/index.ts
// Last sync: 2025-10-23T19:37:33.150Z
// 
// To update these types:
// 1. Edit backend/src/types/index.ts
// 2. Run: npm run sync:types (in backend)
// ============================================

// backend/src/types/index.ts
import { Prisma } from '@prisma/client';

// ============================================
// COMPANY TYPES
// ============================================
export type Company = Prisma.CompanyGetPayload<{}>;

export type CompanyWithUsers = Prisma.CompanyGetPayload<{
  include: { users: true };
}>;

export type CompanyWithLicense = Prisma.CompanyGetPayload<{
  include: { licenses: true };
}>;

export type CompanyWithAll = Prisma.CompanyGetPayload<{
  include: {
    users: true;
    invitations: true;
    clients: true;
    licenses: true;
    rooms: true;
    stays: true;
    products: true;
    categories: true;
    staff: true;
  };
}>;

export type CreateCompanyInput = {
  name: string;
  domain?: string;
  companyAdress?: string;
};

export type UpdateCompanyInput = Partial<CreateCompanyInput>;

// ============================================
// INVITATION TYPES
// ============================================
export type Invitation = Prisma.InvitationGetPayload<{}>;

export type InvitationWithCompany = Prisma.InvitationGetPayload<{
  include: { company: true };
}>;

export type InvitationWithCreator = Prisma.InvitationGetPayload<{
  include: { creator: true };
}>;

export type CreateInvitationInput = {
  email: string;
  companyId: number;
  role?: string;
  expiresAt: Date;
};

export type UpdateInvitationInput = Partial<CreateInvitationInput>;

// ============================================
// LICENSE TYPES
// ============================================
export type License = Prisma.LicenseGetPayload<{}>;

export type LicenseWithCompany = Prisma.LicenseGetPayload<{
  include: { company: true };
}>;

export type CreateLicenseInput = {
  companyId: number;
  licenseKey: string;
  plan: string;
  status?: string;
  expiresAt?: Date;
  maxUsers?: number;
  maxClients?: number;
  maxRooms?: number;
  features?: string;
};

export type UpdateLicenseInput = Partial<CreateLicenseInput>;

// ============================================
// USER TYPES
// ============================================
export type User = Prisma.UserGetPayload<{}>;

export type UserWithCompany = Prisma.UserGetPayload<{
  include: { company: true };
}>;

export type UserWithRelations = Prisma.UserGetPayload<{
  include: {
    company: true;
    auditLogs: true;
  };
}>;

export type CreateUserInput = {
  email: string;
  passwordHash: string;
  role: string;
  firstName?: string;
  lastName?: string;
  status?: string;
  companyId: number;
};

export type UpdateUserInput = Partial<
  Omit<CreateUserInput, 'email' | 'passwordHash'>
>;

export type RegisterUserInput = {
  email: string;
  password: string;
  firstName?: string;
  lastName?: string;
  companyName: string;
};

export type LoginInput = {
  email: string;
  password: string;
};

export type AuthResponse = {
  access_token: string;
  user: Omit<User, 'passwordHash'>;
};

// ============================================
// AUDIT LOG TYPES
// ============================================
export type AuditLog = Prisma.AuditLogGetPayload<{}>;

export type AuditLogWithUser = Prisma.AuditLogGetPayload<{
  include: { user: true };
}>;

export type AuditLogWithCompany = Prisma.AuditLogGetPayload<{
  include: { company: true };
}>;

export type CreateAuditLogInput = {
  companyId: number;
  model: string;
  recordId: number;
  action: string;
  beforeData?: string;
  afterData?: string;
  changedFields?: string;
  ipAddress?: string;
  userAgent?: string;
  metadata?: string;
  performedBy?: number;
};

// ============================================
// ROOM TYPES
// ============================================
export type Room = Prisma.RoomGetPayload<{}>;

export type RoomWithStays = Prisma.RoomGetPayload<{
  include: { stays: true };
}>;

export type RoomWithCompany = Prisma.RoomGetPayload<{
  include: { company: true };
}>;

export type RoomWithAll = Prisma.RoomGetPayload<{
  include: {
    stays: { include: { client: true } };
    company: true;
    creator: true;
    updater: true;
  };
}>;

export type CreateRoomInput = {
  number: string;
  companyId: number;
  type: string;
  pricePerNight: number;
};

export type UpdateRoomInput = Partial<CreateRoomInput>;

// ============================================
// CLIENT TYPES
// ============================================
export type Client = Prisma.ClientGetPayload<{}>;

export type ClientWithStays = Prisma.ClientGetPayload<{
  include: { stays: { include: { room: true } } };
}>;

export type ClientWithInvoices = Prisma.ClientGetPayload<{
  include: {
    restaurantInvoices: true;
    supermarketInvoices: true;
  };
}>;

export type ClientWithAll = Prisma.ClientGetPayload<{
  include: {
    stays: { include: { room: true } };
    restaurantInvoices: true;
    supermarketInvoices: true;
    company: true;
  };
}>;

export type CreateClientInput = {
  name: string;
  contactEmail: string;
  phone: string;
  adress?: string;
  companyId: number;
};

export type UpdateClientInput = Partial<CreateClientInput>;

// ============================================
// STAY TYPES
// ============================================
export type Stay = Prisma.StayGetPayload<{}>;

export type StayWithRoom = Prisma.StayGetPayload<{
  include: { room: true };
}>;

export type StayWithClient = Prisma.StayGetPayload<{
  include: { client: true };
}>;

export type StayWithDetails = Prisma.StayGetPayload<{
  include: {
    room: true;
    client: true;
    laundryInvoices: { include: { details: true } };
    sportInvoices: { include: { details: true } };
    barberInvoices: { include: { details: true } };
    restaurantInvoices: { include: { details: true } };
  };
}>;

export type StayWithAll = Prisma.StayGetPayload<{
  include: {
    room: true;
    client: true;
    company: true;
    laundryInvoices: { include: { details: { include: { product: true } } } };
    sportInvoices: { include: { details: { include: { product: true } } } };
    barberInvoices: { include: { details: { include: { product: true } } } };
    restaurantInvoices: {
      include: { details: { include: { product: true } } };
    };
  };
}>;

export type CreateStayInput = {
  companyId: number;
  checkInDate: Date;
  checkOutDate: Date;
  roomId: number;
  clientId: number;
  status?: string;
};

export type UpdateStayInput = Partial<CreateStayInput>;

// ============================================
// CATEGORY TYPES
// ============================================
export type Category = Prisma.CategoryGetPayload<{}>;

export type CategoryWithProducts = Prisma.CategoryGetPayload<{
  include: { products: true };
}>;

export type CategoryWithCompany = Prisma.CategoryGetPayload<{
  include: { company: true };
}>;

export type CreateCategoryInput = {
  name: string;
  description?: string;
  companyId: number;
};

export type UpdateCategoryInput = Partial<CreateCategoryInput>;

// ============================================
// PRODUCT TYPES
// ============================================
export type Product = Prisma.ProductGetPayload<{}>;

export type ProductWithCategory = Prisma.ProductGetPayload<{
  include: { category: true };
}>;

export type ProductWithCompany = Prisma.ProductGetPayload<{
  include: { company: true };
}>;

export type ProductWithAll = Prisma.ProductGetPayload<{
  include: {
    category: true;
    company: true;
  };
}>;

export type CreateProductInput = {
  name: string;
  barcode?: string;
  price: number;
  stock?: number;
  companyId: number;
  categoryId: number;
  description?: string;
  imageUrl?: string;
};

export type UpdateProductInput = Partial<CreateProductInput>;

// ============================================
// PURCHASE TYPES
// ============================================
export type Purchase = Prisma.PurchaseGetPayload<{}>;

export type PurchaseWithDetails = Prisma.PurchaseGetPayload<{
  include: { details: { include: { product: true } } };
}>;

export type PurchaseWithCompany = Prisma.PurchaseGetPayload<{
  include: { company: true };
}>;

export type PurchaseDetail = Prisma.PurchaseDetailGetPayload<{}>;

export type PurchaseDetailWithProduct = Prisma.PurchaseDetailGetPayload<{
  include: { product: true };
}>;

export type CreatePurchaseInput = {
  companyId: number;
  supplier: string;
  total: number;
  details: {
    productId: number;
    quantity: number;
    unitPrice: number;
  }[];
};

export type UpdatePurchaseInput = Partial<Omit<CreatePurchaseInput, 'details'>>;

// ============================================
// LAUNDRY INVOICE TYPES
// ============================================
export type LaundryInvoice = Prisma.LaundryInvoiceGetPayload<{}>;

export type LaundryInvoiceWithDetails = Prisma.LaundryInvoiceGetPayload<{
  include: { details: { include: { product: true } } };
}>;

export type LaundryInvoiceWithStay = Prisma.LaundryInvoiceGetPayload<{
  include: { stay: { include: { client: true; room: true } } };
}>;

export type LaundryDetail = Prisma.LaundryDetailGetPayload<{}>;

export type CreateLaundryInvoiceInput = {
  stayId: number;
  total: number;
  status?: string;
  details: {
    productId: number;
    quantity: number;
    unitPrice: number;
  }[];
};

export type UpdateLaundryInvoiceInput = Partial<
  Omit<CreateLaundryInvoiceInput, 'details'>
>;

// ============================================
// SPORT INVOICE TYPES
// ============================================
export type SportInvoice = Prisma.SportInvoiceGetPayload<{}>;

export type SportInvoiceWithDetails = Prisma.SportInvoiceGetPayload<{
  include: { details: { include: { product: true } } };
}>;

export type SportInvoiceWithStay = Prisma.SportInvoiceGetPayload<{
  include: { stay: { include: { client: true; room: true } } };
}>;

export type SportDetail = Prisma.SportDetailGetPayload<{}>;

export type CreateSportInvoiceInput = {
  stayId: number;
  total: number;
  status?: string;
  details: {
    productId: number;
    quantity: number;
    unitPrice: number;
  }[];
};

export type UpdateSportInvoiceInput = Partial<
  Omit<CreateSportInvoiceInput, 'details'>
>;

// ============================================
// BARBER INVOICE TYPES
// ============================================
export type BarberInvoice = Prisma.BarberInvoiceGetPayload<{}>;

export type BarberInvoiceWithDetails = Prisma.BarberInvoiceGetPayload<{
  include: { details: { include: { product: true } } };
}>;

export type BarberInvoiceWithStay = Prisma.BarberInvoiceGetPayload<{
  include: { stay: { include: { client: true; room: true } } };
}>;

export type BarberDetail = Prisma.BarberDetailGetPayload<{}>;

export type CreateBarberInvoiceInput = {
  stayId: number;
  total: number;
  status?: string;
  details: {
    productId: number;
    quantity: number;
    unitPrice: number;
  }[];
};

export type UpdateBarberInvoiceInput = Partial<
  Omit<CreateBarberInvoiceInput, 'details'>
>;

// ============================================
// RESTAURANT INVOICE TYPES
// ============================================
export type RestaurantInvoice = Prisma.RestaurantInvoiceGetPayload<{}>;

export type RestaurantInvoiceWithDetails = Prisma.RestaurantInvoiceGetPayload<{
  include: { details: { include: { product: true } } };
}>;

export type RestaurantInvoiceWithStay = Prisma.RestaurantInvoiceGetPayload<{
  include: { stay: { include: { client: true; room: true } } };
}>;

export type RestaurantInvoiceWithClient = Prisma.RestaurantInvoiceGetPayload<{
  include: { client: true };
}>;

export type RestaurantInvoiceWithAll = Prisma.RestaurantInvoiceGetPayload<{
  include: {
    stay: { include: { client: true; room: true } };
    client: true;
    company: true;
    details: { include: { product: true } };
  };
}>;

export type RestaurantDetail = Prisma.RestaurantDetailGetPayload<{}>;

export type CreateRestaurantInvoiceInput = {
  companyId: number;
  stayId?: number;
  clientId?: number;
  customerName?: string;
  customerPhone?: string;
  invoiceType?: string;
  total: number;
  status?: string;
  paymentMethod?: string;
  paidAmount?: number;
  details: {
    productId: number;
    quantity: number;
    unitPrice: number;
  }[];
};

export type UpdateRestaurantInvoiceInput = Partial<
  Omit<CreateRestaurantInvoiceInput, 'details'>
>;

// ============================================
// SUPERMARKET INVOICE TYPES
// ============================================
export type SupermarketInvoice = Prisma.SupermarketInvoiceGetPayload<{}>;

export type SupermarketInvoiceWithDetails =
  Prisma.SupermarketInvoiceGetPayload<{
    include: { details: { include: { product: true } } };
  }>;

export type SupermarketInvoiceWithClient = Prisma.SupermarketInvoiceGetPayload<{
  include: { client: true };
}>;

export type SupermarketInvoiceWithAll = Prisma.SupermarketInvoiceGetPayload<{
  include: {
    client: true;
    company: true;
    details: { include: { product: true } };
  };
}>;

export type SupermarketDetail = Prisma.SupermarketDetailGetPayload<{}>;

export type CreateSupermarketInvoiceInput = {
  companyId: number;
  clientId?: number;
  customerName?: string;
  customerPhone?: string;
  total: number;
  status?: string;
  paymentMethod?: string;
  paidAmount?: number;
  details: {
    productId: number;
    quantity: number;
    unitPrice: number;
  }[];
};

export type UpdateSupermarketInvoiceInput = Partial<
  Omit<CreateSupermarketInvoiceInput, 'details'>
>;

// ============================================
// STAFF TYPES
// ============================================
export type Staff = Prisma.StaffGetPayload<{}>;

export type StaffWithCompany = Prisma.StaffGetPayload<{
  include: { company: true };
}>;

export type CreateStaffInput = {
  name: string;
  email: string;
  companyId: number;
  staffrole?: string;
};

export type UpdateStaffInput = Partial<CreateStaffInput>;

// ============================================
// PAGINATION TYPES
// ============================================
export interface PaginationParams {
  page?: number;
  limit?: number;
  sortBy?: string;
  sortOrder?: 'asc' | 'desc';
  search?: string;
}

export interface PaginatedResponse<T> {
  data: T[];
  total: number;
  page: number;
  limit: number;
  totalPages: number;
}

// ============================================
// API ERROR TYPES
// ============================================
export interface ApiError {
  statusCode: number;
  message: string;
  error?: string;
  details?: any;
}

export interface ValidationError {
  field: string;
  message: string;
}

// ============================================
// FILTER TYPES
// ============================================
export interface ClientFilters extends PaginationParams {
  companyId?: number;
  name?: string;
  email?: string;
  phone?: string;
}

export interface RoomFilters extends PaginationParams {
  companyId?: number;
  type?: string;
  available?: boolean;
  minPrice?: number;
  maxPrice?: number;
}

export interface StayFilters extends PaginationParams {
  companyId?: number;
  status?: string;
  roomId?: number;
  clientId?: number;
  checkInFrom?: Date;
  checkInTo?: Date;
}

export interface ProductFilters extends PaginationParams {
  companyId?: number;
  categoryId?: number;
  inStock?: boolean;
  minPrice?: number;
  maxPrice?: number;
  barcode?: string;
}

export interface InvoiceFilters extends PaginationParams {
  companyId?: number;
  status?: string;
  clientId?: number;
  stayId?: number;
  invoiceType?: string;
  dateFrom?: Date;
  dateTo?: Date;
}

// ============================================
// STATISTICS TYPES
// ============================================
export interface DashboardStats {
  totalClients: number;
  totalRooms: number;
  occupiedRooms: number;
  availableRooms: number;
  activeStays: number;
  totalRevenue: number;
  monthlyRevenue: number;
  pendingInvoices: number;
  lowStockProducts: number;
}

export interface RevenueByService {
  restaurant: number;
  supermarket: number;
  laundry: number;
  sport: number;
  barber: number;
  accommodation: number;
}

export interface MonthlyRevenue {
  month: string;
  revenue: number;
}

// ============================================
// REPORT TYPES
// ============================================
export interface SalesReport {
  period: { from: Date; to: Date };
  totalSales: number;
  totalInvoices: number;
  averageOrderValue: number;
  topProducts: Array<{
    product: Product;
    quantity: number;
    revenue: number;
  }>;
  salesByCategory: Array<{
    category: Category;
    revenue: number;
  }>;
}

export interface InventoryReport {
  totalProducts: number;
  totalValue: number;
  lowStockProducts: Product[];
  outOfStockProducts: Product[];
  topSellingProducts: Array<{
    product: Product;
    quantitySold: number;
  }>;
}

export interface OccupancyReport {
  period: { from: Date; to: Date };
  totalRooms: number;
  averageOccupancy: number;
  revenuePerAvailableRoom: number;
  roomsOccupiedByType: Record<string, number>;
}
